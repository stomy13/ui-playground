/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'

const SuspenseLazyRouteImport = createFileRoute('/suspense')()
const React19LazyRouteImport = createFileRoute('/react19')()
const ProxyLazyRouteImport = createFileRoute('/proxy')()
const PlaygroundLazyRouteImport = createFileRoute('/playground')()
const HeartlaundryLazyRouteImport = createFileRoute('/heartlaundry')()
const FormComparisonLazyRouteImport = createFileRoute('/form-comparison')()
const AboutLazyRouteImport = createFileRoute('/about')()
const IndexLazyRouteImport = createFileRoute('/')()

const SuspenseLazyRoute = SuspenseLazyRouteImport.update({
  id: '/suspense',
  path: '/suspense',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/suspense.lazy').then((d) => d.Route))
const React19LazyRoute = React19LazyRouteImport.update({
  id: '/react19',
  path: '/react19',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/react19.lazy').then((d) => d.Route))
const ProxyLazyRoute = ProxyLazyRouteImport.update({
  id: '/proxy',
  path: '/proxy',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/proxy.lazy').then((d) => d.Route))
const PlaygroundLazyRoute = PlaygroundLazyRouteImport.update({
  id: '/playground',
  path: '/playground',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/playground.lazy').then((d) => d.Route))
const HeartlaundryLazyRoute = HeartlaundryLazyRouteImport.update({
  id: '/heartlaundry',
  path: '/heartlaundry',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/heartlaundry.lazy').then((d) => d.Route))
const FormComparisonLazyRoute = FormComparisonLazyRouteImport.update({
  id: '/form-comparison',
  path: '/form-comparison',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/form-comparison.lazy').then((d) => d.Route),
)
const AboutLazyRoute = AboutLazyRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/form-comparison': typeof FormComparisonLazyRoute
  '/heartlaundry': typeof HeartlaundryLazyRoute
  '/playground': typeof PlaygroundLazyRoute
  '/proxy': typeof ProxyLazyRoute
  '/react19': typeof React19LazyRoute
  '/suspense': typeof SuspenseLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/form-comparison': typeof FormComparisonLazyRoute
  '/heartlaundry': typeof HeartlaundryLazyRoute
  '/playground': typeof PlaygroundLazyRoute
  '/proxy': typeof ProxyLazyRoute
  '/react19': typeof React19LazyRoute
  '/suspense': typeof SuspenseLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/form-comparison': typeof FormComparisonLazyRoute
  '/heartlaundry': typeof HeartlaundryLazyRoute
  '/playground': typeof PlaygroundLazyRoute
  '/proxy': typeof ProxyLazyRoute
  '/react19': typeof React19LazyRoute
  '/suspense': typeof SuspenseLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/form-comparison'
    | '/heartlaundry'
    | '/playground'
    | '/proxy'
    | '/react19'
    | '/suspense'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/form-comparison'
    | '/heartlaundry'
    | '/playground'
    | '/proxy'
    | '/react19'
    | '/suspense'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/form-comparison'
    | '/heartlaundry'
    | '/playground'
    | '/proxy'
    | '/react19'
    | '/suspense'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  FormComparisonLazyRoute: typeof FormComparisonLazyRoute
  HeartlaundryLazyRoute: typeof HeartlaundryLazyRoute
  PlaygroundLazyRoute: typeof PlaygroundLazyRoute
  ProxyLazyRoute: typeof ProxyLazyRoute
  React19LazyRoute: typeof React19LazyRoute
  SuspenseLazyRoute: typeof SuspenseLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/suspense': {
      id: '/suspense'
      path: '/suspense'
      fullPath: '/suspense'
      preLoaderRoute: typeof SuspenseLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/react19': {
      id: '/react19'
      path: '/react19'
      fullPath: '/react19'
      preLoaderRoute: typeof React19LazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/proxy': {
      id: '/proxy'
      path: '/proxy'
      fullPath: '/proxy'
      preLoaderRoute: typeof ProxyLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/playground': {
      id: '/playground'
      path: '/playground'
      fullPath: '/playground'
      preLoaderRoute: typeof PlaygroundLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/heartlaundry': {
      id: '/heartlaundry'
      path: '/heartlaundry'
      fullPath: '/heartlaundry'
      preLoaderRoute: typeof HeartlaundryLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/form-comparison': {
      id: '/form-comparison'
      path: '/form-comparison'
      fullPath: '/form-comparison'
      preLoaderRoute: typeof FormComparisonLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  FormComparisonLazyRoute: FormComparisonLazyRoute,
  HeartlaundryLazyRoute: HeartlaundryLazyRoute,
  PlaygroundLazyRoute: PlaygroundLazyRoute,
  ProxyLazyRoute: ProxyLazyRoute,
  React19LazyRoute: React19LazyRoute,
  SuspenseLazyRoute: SuspenseLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
